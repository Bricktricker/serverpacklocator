plugins {
    id 'maven-publish'
    id 'java'
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'jacoco'
    id 'net.minecraftforge.gradleutils'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'cpw.mods.forge'
version = gradleutils.getTagOffsetBranchVersion()
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "forge"
        url = "https://maven.minecraftforge.net/"
    }
    maven {
        name = "mojang"
        url = "https://libraries.minecraft.net/"
    }
}

jacoco {
    toolVersion = "0.8.2"
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes([
                'Specification-Title':      project.name,
                'Specification-Vendor':     'CPW',
                'Specification-Version':    project.version,
                'Implementation-Title':     project.name,
                'Implementation-Version':   project.version,
                'Implementation-Vendor':    'CPW',
                'Automatic-Module-Name':    'serverpacklocator',
        ] as LinkedHashMap)
    }
}

project(':Mod').afterEvaluate {
    tasks.distributionJar {
        from (project(':Mod').tasks.jar.outputs.files) {
            into 'utilmod'
        }

    }
}

shadowJar {
    archiveClassifier = 'all-without-utility-mod'
    configurations = [project.configurations.shadow]
    relocate 'io.netty', 'shadow.io.netty'
    manifest {
        attributes([
                'Specification-Title':      project.name,
                'Specification-Vendor':     'CPW',
                'Specification-Version':    project.version,
                'Implementation-Title':     project.name,
                'Implementation-Version':   project.version,
                'Implementation-Vendor':    'CPW',
                'Automatic-Module-Name':    'serverpacklocator',
        ] as LinkedHashMap)
    }
}

task distributionJar(type: Jar) {
    archiveClassifier = 'all'
    dependsOn shadowJar
    from project.zipTree(tasks.shadowJar.archiveFile)
    manifest {
        attributes([
                'Specification-Title':      project.name,
                'Specification-Vendor':     'CPW',
                'Specification-Version':    project.version,
                'Implementation-Title':     project.name,
                'Implementation-Version':   project.version,
                'Implementation-Vendor':    'CPW',
                'Automatic-Module-Name':    'serverpacklocator',
        ] as LinkedHashMap)
    }
}

task sourcesJar(type: Jar) {
    getArchiveClassifier().set('sources')
    from sourceSets.main.allSource
}


dependencies {
    implementation("net.minecraftforge:forgespi:6.0.2")
    implementation("cpw.mods:modlauncher:10.0.8")
    implementation("com.google.code.gson:gson:2.8.0")
    implementation("com.mojang:authlib:3.11.49")
    implementation("org.apache.logging.log4j:log4j-api:2.17.0")
    shadow("io.netty:netty-all:4.1.25.Final")
    implementation("com.electronwill.night-config:core:3.6.0")
    implementation("com.electronwill.night-config:toml:3.6.0")
    implementation("org.apache.maven:maven-artifact:3.6.3")
    testImplementation("org.junit.jupiter:junit-jupiter:5.4.2")
}

artifacts {
    archives jar
    archives shadowJar
    archives sourcesJar
    archives distributionJar
}

compileJava {
    options.compilerArgs << "-XDignore.symbol.file"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact shadowJar {
                classifier 'all-without-utility-mod'
            }

            artifact distributionJar {
                classifier 'all'
            }

            pom {
                name = 'Server Pack Mod Locator'
                description = 'Server Pack Mod Locator'
                url = 'https://github.com/cpw/serverpacklocator'
                scm {
                    url = 'https://github.com/cpw/serverpacklocator'
                    connection = 'scm:git:git://github.com/cpw/serverpacklocator.git'
                    developerConnection = 'scm:git:git@github.com:cpw/serverpacklocator.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/cpw/serverpacklocator/issues'
                }

                licenses {
                    license {
                        name = 'LGPLv2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                    }
                }

                developers {
                    developer {
                        id = 'cpw'
                        name = 'cpw'
                    }
                }
            }
        }
    }

    if (System.getenv().containsKey("LDTTeamJfrogUsername") && System.getenv().containsKey("LDTTeamJfrogPassword")) {
        repositories {
            maven {
                name 'LDTTeamJfrog'
                credentials {
                    username System.getenv().get("LDTTeamJfrogUsername")
                    password System.getenv().get("LDTTeamJfrogPassword")
                }
                url 'https://ldtteam.jfrog.io/ldtteam/mods-maven'
            }
        }
    }
}

changelog {
    fromTag '7.0.0'
}

tasks.assemble.dependsOn tasks.distributionJar